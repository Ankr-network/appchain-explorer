syntax = "proto3";

option java_package = "com.ankr.proto";
option java_outer_classname = "BlockscoutGatewayProto";

option go_package = "./shared/types;types";

package com.ankr;

import "block.proto";
import "transaction.proto";
import "token_transfer.proto";
import "address.proto";
import "google/api/annotations.proto";

/**
 *        ____  ____   ____
 *   __ _|  _ \|  _ \ / ___|
 *  / _` | |_) | |_) | |
 * | (_| |  _ <|  __/| |___
 *  \__, |_| \_\_|    \____|
 *  |___/
 *
 **/

service BlockscoutGateway {
  rpc GetRecentBlocks(GetRecentBlocksRequest) returns (GetRecentBlocksReply) {
    option (google.api.http) = {
      get: "/v1alpha/block"
    };
  }
  rpc GetRecentTxs(GetRecentTxsRequest) returns (GetRecentTxsReply) {
    option (google.api.http) = {
      get: "/v1alpha/tx"
    };
  }
  rpc GetAddress(GetAddressRequest) returns (GetAddressReply) {
    option (google.api.http) = {
      get: "/v1alpha/address/{hash}"
    };
  }
  rpc GetBlockByHashOrNumber(GetBlockByHashOrNumberRequest) returns (GetBlockByHashOrNumberReply) {
    option (google.api.http) = {
      get: "/v1alpha/block/{number}"
    };
  }
  rpc GetTransactionByHash(GetTransactionByHashRequest) returns (GetTransactionByHashReply) {
    option (google.api.http) = {
      get: "/v1alpha/tx/{hash}"
    };
  }
  rpc GetTokenTransfers(GetTokenTransfersRequest) returns (GetTokenTransfersReply) {
    option (google.api.http) = {
      get: "/v1alpha/token/transfers"
    };
  }
}

message GetRecentBlocksRequest {
  uint64 from_block = 1;
  uint64 limit = 2;
}
message GetRecentBlocksReply {
  repeated Block blocks = 1;
}

message GetRecentTxsRequest {
  uint64 from_ts = 1;
  uint64 limit = 2;
}
message GetRecentTxsReply {
  repeated Transaction txs = 1;
}

message GetAddressRequest {
  string hash = 1;
}
message GetAddressReply {
  Address address = 1;
}

message GetBlockByHashOrNumberRequest {
  uint64 number = 1;
  string hash = 2;
}
message GetBlockByHashOrNumberReply {
  BlockDetails block = 1;
}

message GetTransactionByHashRequest {
  string hash = 1;
}
message GetTransactionByHashReply {
  TransactionDetails transaction = 1;
}

message GetTokenTransfersRequest {
  bytes token_contract = 1;
  uint64 from_block = 2;
  uint64 limit = 3;
}
message GetTokenTransfersReply {
  repeated TokenTransfer transfers = 1;
}
