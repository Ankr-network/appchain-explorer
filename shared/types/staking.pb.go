// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: staking.proto

package types

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Delegator struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount               string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Delegator) Reset()         { *m = Delegator{} }
func (m *Delegator) String() string { return proto.CompactTextString(m) }
func (*Delegator) ProtoMessage()    {}
func (*Delegator) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{0}
}
func (m *Delegator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Delegator.Unmarshal(m, b)
}
func (m *Delegator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Delegator.Marshal(b, m, deterministic)
}
func (m *Delegator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Delegator.Merge(m, src)
}
func (m *Delegator) XXX_Size() int {
	return xxx_messageInfo_Delegator.Size(m)
}
func (m *Delegator) XXX_DiscardUnknown() {
	xxx_messageInfo_Delegator.DiscardUnknown(m)
}

var xxx_messageInfo_Delegator proto.InternalMessageInfo

func (m *Delegator) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Delegator) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type GetDelegatorsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDelegatorsRequest) Reset()         { *m = GetDelegatorsRequest{} }
func (m *GetDelegatorsRequest) String() string { return proto.CompactTextString(m) }
func (*GetDelegatorsRequest) ProtoMessage()    {}
func (*GetDelegatorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{1}
}
func (m *GetDelegatorsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDelegatorsRequest.Unmarshal(m, b)
}
func (m *GetDelegatorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDelegatorsRequest.Marshal(b, m, deterministic)
}
func (m *GetDelegatorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDelegatorsRequest.Merge(m, src)
}
func (m *GetDelegatorsRequest) XXX_Size() int {
	return xxx_messageInfo_GetDelegatorsRequest.Size(m)
}
func (m *GetDelegatorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDelegatorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDelegatorsRequest proto.InternalMessageInfo

type GetDelegatorsReply struct {
	Delegators           []*Delegator `protobuf:"bytes,1,rep,name=delegators,proto3" json:"delegators,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetDelegatorsReply) Reset()         { *m = GetDelegatorsReply{} }
func (m *GetDelegatorsReply) String() string { return proto.CompactTextString(m) }
func (*GetDelegatorsReply) ProtoMessage()    {}
func (*GetDelegatorsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_289e7c8aea278311, []int{2}
}
func (m *GetDelegatorsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDelegatorsReply.Unmarshal(m, b)
}
func (m *GetDelegatorsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDelegatorsReply.Marshal(b, m, deterministic)
}
func (m *GetDelegatorsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDelegatorsReply.Merge(m, src)
}
func (m *GetDelegatorsReply) XXX_Size() int {
	return xxx_messageInfo_GetDelegatorsReply.Size(m)
}
func (m *GetDelegatorsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDelegatorsReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetDelegatorsReply proto.InternalMessageInfo

func (m *GetDelegatorsReply) GetDelegators() []*Delegator {
	if m != nil {
		return m.Delegators
	}
	return nil
}

func init() {
	proto.RegisterType((*Delegator)(nil), "com.ankr.Delegator")
	proto.RegisterType((*GetDelegatorsRequest)(nil), "com.ankr.GetDelegatorsRequest")
	proto.RegisterType((*GetDelegatorsReply)(nil), "com.ankr.GetDelegatorsReply")
}

func init() { proto.RegisterFile("staking.proto", fileDescriptor_289e7c8aea278311) }

var fileDescriptor_289e7c8aea278311 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x2e, 0x49, 0xcc,
	0xce, 0xcc, 0x4b, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x48, 0xce, 0xcf, 0xd5, 0x4b,
	0xcc, 0xcb, 0x2e, 0x52, 0xb2, 0xe5, 0xe2, 0x74, 0x49, 0xcd, 0x49, 0x4d, 0x4f, 0x2c, 0xc9, 0x2f,
	0x12, 0x92, 0xe0, 0x62, 0x4f, 0x4c, 0x49, 0x29, 0x4a, 0x2d, 0x2e, 0x96, 0x60, 0x54, 0x60, 0xd4,
	0xe0, 0x0c, 0x82, 0x71, 0x85, 0xc4, 0xb8, 0xd8, 0x12, 0x73, 0xf3, 0x4b, 0xf3, 0x4a, 0x24, 0x98,
	0xc0, 0x12, 0x50, 0x9e, 0x92, 0x18, 0x97, 0x88, 0x7b, 0x6a, 0x09, 0xdc, 0x84, 0xe2, 0xa0, 0xd4,
	0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x25, 0x4f, 0x2e, 0x21, 0x34, 0xf1, 0x82, 0x9c, 0x4a, 0x21, 0x63,
	0x2e, 0xae, 0x14, 0xb8, 0x90, 0x04, 0xa3, 0x02, 0xb3, 0x06, 0xb7, 0x91, 0xb0, 0x1e, 0xcc, 0x2d,
	0x7a, 0x70, 0xe5, 0x41, 0x48, 0xca, 0x8c, 0xe2, 0xb9, 0xf8, 0x82, 0x21, 0x8e, 0x77, 0x4f, 0x2c,
	0x49, 0x2d, 0x4f, 0xac, 0x14, 0xf2, 0xe5, 0xe2, 0x45, 0x31, 0x5c, 0x48, 0x0e, 0x61, 0x06, 0x36,
	0xd7, 0x48, 0xc9, 0xe0, 0x94, 0x2f, 0xc8, 0xa9, 0x74, 0xb2, 0xe6, 0xe2, 0x83, 0x4b, 0x83, 0x83,
	0xc7, 0x49, 0x18, 0xd5, 0xc2, 0x00, 0x90, 0x60, 0x94, 0x88, 0x9e, 0x7e, 0x71, 0x46, 0x62, 0x51,
	0x6a, 0x8a, 0x7e, 0x49, 0x65, 0x41, 0x6a, 0xb1, 0x35, 0x98, 0x4c, 0x62, 0x03, 0xeb, 0x30, 0x06,
	0x04, 0x00, 0x00, 0xff, 0xff, 0x15, 0x92, 0xde, 0xb8, 0x61, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StakingGatewayClient is the client API for StakingGateway service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StakingGatewayClient interface {
	GetDelegators(ctx context.Context, in *GetDelegatorsRequest, opts ...grpc.CallOption) (*GetDelegatorsReply, error)
}

type stakingGatewayClient struct {
	cc *grpc.ClientConn
}

func NewStakingGatewayClient(cc *grpc.ClientConn) StakingGatewayClient {
	return &stakingGatewayClient{cc}
}

func (c *stakingGatewayClient) GetDelegators(ctx context.Context, in *GetDelegatorsRequest, opts ...grpc.CallOption) (*GetDelegatorsReply, error) {
	out := new(GetDelegatorsReply)
	err := c.cc.Invoke(ctx, "/com.ankr.StakingGateway/GetDelegators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StakingGatewayServer is the server API for StakingGateway service.
type StakingGatewayServer interface {
	GetDelegators(context.Context, *GetDelegatorsRequest) (*GetDelegatorsReply, error)
}

// UnimplementedStakingGatewayServer can be embedded to have forward compatible implementations.
type UnimplementedStakingGatewayServer struct {
}

func (*UnimplementedStakingGatewayServer) GetDelegators(ctx context.Context, req *GetDelegatorsRequest) (*GetDelegatorsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDelegators not implemented")
}

func RegisterStakingGatewayServer(s *grpc.Server, srv StakingGatewayServer) {
	s.RegisterService(&_StakingGateway_serviceDesc, srv)
}

func _StakingGateway_GetDelegators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDelegatorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StakingGatewayServer).GetDelegators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.ankr.StakingGateway/GetDelegators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StakingGatewayServer).GetDelegators(ctx, req.(*GetDelegatorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StakingGateway_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.ankr.StakingGateway",
	HandlerType: (*StakingGatewayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDelegators",
			Handler:    _StakingGateway_GetDelegators_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "staking.proto",
}
